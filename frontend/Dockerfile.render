# React Frontend Dockerfile for Render - Fixes blank page issues
FROM node:18-alpine AS build

WORKDIR /app

# Environment variables for production
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
ENV CI=true

# Copy package files first for better caching
COPY package*.json ./

# Install dependencies
RUN npm ci --silent --prefer-offline --no-audit

# Copy all source code
COPY . .

# Clean any existing build and create fresh build
RUN rm -rf build && npm run build

# Verify build was successful
RUN test -f build/index.html || (echo "❌ Build failed - index.html not found!" && exit 1)
RUN test -d build/static || (echo "❌ Build failed - static directory not found!" && exit 1)

# Production stage with nginx
FROM nginx:alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Remove default nginx config
RUN rm -f /etc/nginx/conf.d/default.conf

# Copy built React app to nginx
COPY --from=build /app/build /usr/share/nginx/html

# Create nginx configuration that fixes React Router blank page issues
RUN echo 'server {\n\
    listen 80;\n\
    server_name _;\n\
    root /usr/share/nginx/html;\n\
    index index.html;\n\
    \n\
    # CRITICAL: Handle React Router - fixes blank page on refresh\n\
    location / {\n\
    try_files $uri $uri/ /index.html;\n\
    }\n\
    \n\
    # Cache static assets\n\
    location /static/ {\n\
    expires 1y;\n\
    add_header Cache-Control "public, immutable";\n\
    }\n\
    \n\
    # Cache other assets\n\
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {\n\
    expires 1y;\n\
    add_header Cache-Control "public, immutable";\n\
    }\n\
    \n\
    # Gzip compression for better performance\n\
    gzip on;\n\
    gzip_vary on;\n\
    gzip_min_length 1024;\n\
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;\n\
    \n\
    # Health check endpoint for debugging\n\
    location /health {\n\
    return 200 "OK - React app is running";\n\
    add_header Content-Type text/plain;\n\
    }\n\
    \n\
    # Security headers\n\
    add_header X-Frame-Options "SAMEORIGIN" always;\n\
    add_header X-Content-Type-Options "nosniff" always;\n\
    }' > /etc/nginx/conf.d/default.conf

# Verify nginx configuration
RUN nginx -t

EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
