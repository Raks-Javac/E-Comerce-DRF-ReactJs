{"ast":null,"code":"import _objectSpread from\"/Users/kudusrufai/Desktop/codes/backend/python/e_commerce/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useEffect,useReducer}from'react';import{cartService}from'../services/cart';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={cart:null,loading:false};const cartReducer=(state,action)=>{switch(action.type){case'SET_LOADING':return _objectSpread(_objectSpread({},state),{},{loading:action.payload});case'SET_CART':return _objectSpread(_objectSpread({},state),{},{cart:action.payload,loading:false});case'CLEAR_CART':return _objectSpread(_objectSpread({},state),{},{cart:null,loading:false});default:return state;}};const CartContext=/*#__PURE__*/createContext(undefined);export const useCart=()=>{const context=useContext(CartContext);if(context===undefined){throw new Error('useCart must be used within a CartProvider');}return context;};export const CartProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(cartReducer,initialState);const{isAuthenticated}=useAuth();const refreshCart=async()=>{if(isAuthenticated){try{dispatch({type:'SET_LOADING',payload:true});const cart=await cartService.getCart();dispatch({type:'SET_CART',payload:cart});}catch(error){console.error('Error fetching cart:',error);dispatch({type:'CLEAR_CART'});}}else{dispatch({type:'CLEAR_CART'});}};useEffect(()=>{refreshCart();},[isAuthenticated]);const addToCart=async function(productId){let quantity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;try{const response=await cartService.addToCart(productId,quantity);dispatch({type:'SET_CART',payload:response.cart});}catch(error){throw error;}};const updateCartItem=async(itemId,quantity)=>{try{const response=await cartService.updateCartItem(itemId,quantity);dispatch({type:'SET_CART',payload:response.cart});}catch(error){throw error;}};const removeFromCart=async itemId=>{try{const response=await cartService.removeFromCart(itemId);dispatch({type:'SET_CART',payload:response.cart});}catch(error){throw error;}};const clearCart=async()=>{try{const response=await cartService.clearCart();dispatch({type:'SET_CART',payload:response.cart});}catch(error){throw error;}};const value=_objectSpread(_objectSpread({},state),{},{addToCart,updateCartItem,removeFromCart,clearCart,refreshCart});return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useReducer","cartService","useAuth","jsx","_jsx","initialState","cart","loading","cartReducer","state","action","type","_objectSpread","payload","CartContext","undefined","useCart","context","Error","CartProvider","_ref","children","dispatch","isAuthenticated","refreshCart","getCart","error","console","addToCart","productId","quantity","arguments","length","response","updateCartItem","itemId","removeFromCart","clearCart","value","Provider"],"sources":["/Users/kudusrufai/Desktop/codes/backend/python/e_commerce/frontend/src/contexts/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport { cartService } from '../services/cart';\nimport { Cart } from '../types';\nimport { useAuth } from './AuthContext';\n\ninterface CartState {\n    cart: Cart | null;\n    loading: boolean;\n}\n\ninterface CartContextType extends CartState {\n    addToCart: (productId: number, quantity?: number) => Promise<void>;\n    updateCartItem: (itemId: number, quantity: number) => Promise<void>;\n    removeFromCart: (itemId: number) => Promise<void>;\n    clearCart: () => Promise<void>;\n    refreshCart: () => Promise<void>;\n}\n\ntype CartAction =\n    | { type: 'SET_LOADING'; payload: boolean }\n    | { type: 'SET_CART'; payload: Cart }\n    | { type: 'CLEAR_CART' };\n\nconst initialState: CartState = {\n    cart: null,\n    loading: false,\n};\n\nconst cartReducer = (state: CartState, action: CartAction): CartState => {\n    switch (action.type) {\n        case 'SET_LOADING':\n            return { ...state, loading: action.payload };\n        case 'SET_CART':\n            return { ...state, cart: action.payload, loading: false };\n        case 'CLEAR_CART':\n            return { ...state, cart: null, loading: false };\n        default:\n            return state;\n    }\n};\n\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport const useCart = () => {\n    const context = useContext(CartContext);\n    if (context === undefined) {\n        throw new Error('useCart must be used within a CartProvider');\n    }\n    return context;\n};\n\ninterface CartProviderProps {\n    children: React.ReactNode;\n}\n\nexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {\n    const [state, dispatch] = useReducer(cartReducer, initialState);\n    const { isAuthenticated } = useAuth();\n\n    const refreshCart = async () => {\n        if (isAuthenticated) {\n            try {\n                dispatch({ type: 'SET_LOADING', payload: true });\n                const cart = await cartService.getCart();\n                dispatch({ type: 'SET_CART', payload: cart });\n            } catch (error) {\n                console.error('Error fetching cart:', error);\n                dispatch({ type: 'CLEAR_CART' });\n            }\n        } else {\n            dispatch({ type: 'CLEAR_CART' });\n        }\n    };\n\n    useEffect(() => {\n        refreshCart();\n    }, [isAuthenticated]);\n\n    const addToCart = async (productId: number, quantity: number = 1) => {\n        try {\n            const response = await cartService.addToCart(productId, quantity);\n            dispatch({ type: 'SET_CART', payload: response.cart });\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const updateCartItem = async (itemId: number, quantity: number) => {\n        try {\n            const response = await cartService.updateCartItem(itemId, quantity);\n            dispatch({ type: 'SET_CART', payload: response.cart });\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const removeFromCart = async (itemId: number) => {\n        try {\n            const response = await cartService.removeFromCart(itemId);\n            dispatch({ type: 'SET_CART', payload: response.cart });\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const clearCart = async () => {\n        try {\n            const response = await cartService.clearCart();\n            dispatch({ type: 'SET_CART', payload: response.cart });\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const value: CartContextType = {\n        ...state,\n        addToCart,\n        updateCartItem,\n        removeFromCart,\n        clearCart,\n        refreshCart,\n    };\n\n    return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}