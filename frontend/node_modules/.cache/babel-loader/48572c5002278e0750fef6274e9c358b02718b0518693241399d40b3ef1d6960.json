{"ast":null,"code":"var _jsxFileName = \"/Users/kudusrufai/Desktop/codes/backend/python/e_commerce/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport { authService } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  loading: true\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case 'CLEAR_USER':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: state.user ? {\n          ...state.user,\n          ...action.payload\n        } : null\n      };\n    default:\n      return state;\n  }\n};\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        try {\n          const user = await authService.getProfile();\n          dispatch({\n            type: 'SET_USER',\n            payload: user\n          });\n        } catch (error) {\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          dispatch({\n            type: 'CLEAR_USER'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    };\n    initAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authService.login(credentials);\n      localStorage.setItem('access_token', response.access);\n      localStorage.setItem('refresh_token', response.refresh);\n      dispatch({\n        type: 'SET_USER',\n        payload: response.user\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authService.register(userData);\n      localStorage.setItem('access_token', response.access);\n      localStorage.setItem('refresh_token', response.refresh);\n      dispatch({\n        type: 'SET_USER',\n        payload: response.user\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (refreshToken) {\n        await authService.logout(refreshToken);\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      dispatch({\n        type: 'CLEAR_USER'\n      });\n    }\n  };\n  const updateUser = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 12\n  }, this);\n};\n_s2(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useReducer","authService","jsxDEV","_jsxDEV","initialState","user","isAuthenticated","loading","authReducer","state","action","type","payload","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","dispatch","initAuth","token","localStorage","getItem","getProfile","error","removeItem","login","credentials","response","setItem","access","refresh","register","userData","logout","refreshToken","console","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kudusrufai/Desktop/codes/backend/python/e_commerce/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport { authService } from '../services/auth';\nimport { AuthResponse, User } from '../types';\n\ninterface AuthState {\n    user: User | null;\n    isAuthenticated: boolean;\n    loading: boolean;\n}\n\ninterface AuthContextType extends AuthState {\n    login: (credentials: { email: string; password: string }) => Promise<void>;\n    register: (userData: any) => Promise<void>;\n    logout: () => void;\n    updateUser: (userData: Partial<User>) => void;\n}\n\ntype AuthAction =\n    | { type: 'SET_LOADING'; payload: boolean }\n    | { type: 'SET_USER'; payload: User }\n    | { type: 'CLEAR_USER' }\n    | { type: 'UPDATE_USER'; payload: Partial<User> };\n\nconst initialState: AuthState = {\n    user: null,\n    isAuthenticated: false,\n    loading: true,\n};\n\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n    switch (action.type) {\n        case 'SET_LOADING':\n            return { ...state, loading: action.payload };\n        case 'SET_USER':\n            return {\n                ...state,\n                user: action.payload,\n                isAuthenticated: true,\n                loading: false,\n            };\n        case 'CLEAR_USER':\n            return {\n                ...state,\n                user: null,\n                isAuthenticated: false,\n                loading: false,\n            };\n        case 'UPDATE_USER':\n            return {\n                ...state,\n                user: state.user ? { ...state.user, ...action.payload } : null,\n            };\n        default:\n            return state;\n    }\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n\ninterface AuthProviderProps {\n    children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    useEffect(() => {\n        const initAuth = async () => {\n            const token = localStorage.getItem('access_token');\n            if (token) {\n                try {\n                    const user = await authService.getProfile();\n                    dispatch({ type: 'SET_USER', payload: user });\n                } catch (error) {\n                    localStorage.removeItem('access_token');\n                    localStorage.removeItem('refresh_token');\n                    dispatch({ type: 'CLEAR_USER' });\n                }\n            } else {\n                dispatch({ type: 'SET_LOADING', payload: false });\n            }\n        };\n\n        initAuth();\n    }, []);\n\n    const login = async (credentials: { email: string; password: string }) => {\n        try {\n            const response: AuthResponse = await authService.login(credentials);\n            localStorage.setItem('access_token', response.access);\n            localStorage.setItem('refresh_token', response.refresh);\n            dispatch({ type: 'SET_USER', payload: response.user });\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const register = async (userData: any) => {\n        try {\n            const response: AuthResponse = await authService.register(userData);\n            localStorage.setItem('access_token', response.access);\n            localStorage.setItem('refresh_token', response.refresh);\n            dispatch({ type: 'SET_USER', payload: response.user });\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const logout = async () => {\n        try {\n            const refreshToken = localStorage.getItem('refresh_token');\n            if (refreshToken) {\n                await authService.logout(refreshToken);\n            }\n        } catch (error) {\n            console.error('Logout error:', error);\n        } finally {\n            localStorage.removeItem('access_token');\n            localStorage.removeItem('refresh_token');\n            dispatch({ type: 'CLEAR_USER' });\n        }\n    };\n\n    const updateUser = (userData: Partial<User>) => {\n        dispatch({ type: 'UPDATE_USER', payload: userData });\n    };\n\n    const value: AuthContextType = {\n        ...state,\n        login,\n        register,\n        logout,\n        updateUser,\n    };\n\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}