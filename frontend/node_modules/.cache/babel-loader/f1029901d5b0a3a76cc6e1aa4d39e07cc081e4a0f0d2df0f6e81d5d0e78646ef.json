{"ast":null,"code":"import api from'./api';export const productService={getProducts:async params=>{const response=await api.get('/products/',{params});return response.data;},getProduct:async id=>{const response=await api.get(\"/products/\".concat(id,\"/\"));return response.data;},getCategories:async()=>{const response=await api.get('/categories/');return response.data;},getFeaturedProducts:async()=>{const response=await api.get('/products/featured/');return response.data;},searchProducts:async query=>{const response=await api.get('/products/search/',{params:{q:query}});return response.data;},addReview:async(productId,reviewData)=>{const response=await api.post(\"/products/\".concat(productId,\"/reviews/\"),reviewData);return response.data;}};","map":{"version":3,"names":["api","productService","getProducts","params","response","get","data","getProduct","id","concat","getCategories","getFeaturedProducts","searchProducts","query","q","addReview","productId","reviewData","post"],"sources":["/Users/kudusrufai/Desktop/codes/backend/python/e_commerce/frontend/src/services/products.ts"],"sourcesContent":["import { Category, Product, ProductDetail } from '../types';\nimport api from './api';\n\nexport const productService = {\n    getProducts: async (params?: {\n        category?: string;\n        search?: string;\n        min_price?: number;\n        max_price?: number;\n        ordering?: string;\n        page?: number;\n    }): Promise<{ results: Product[]; count: number; next?: string; previous?: string }> => {\n        const response = await api.get('/products/', { params });\n        return response.data;\n    },\n\n    getProduct: async (id: number): Promise<ProductDetail> => {\n        const response = await api.get(`/products/${id}/`);\n        return response.data;\n    },\n\n    getCategories: async (): Promise<Category[]> => {\n        const response = await api.get('/categories/');\n        return response.data;\n    },\n\n    getFeaturedProducts: async (): Promise<Product[]> => {\n        const response = await api.get('/products/featured/');\n        return response.data;\n    },\n\n    searchProducts: async (query: string): Promise<Product[]> => {\n        const response = await api.get('/products/search/', { params: { q: query } });\n        return response.data;\n    },\n\n    addReview: async (productId: number, reviewData: { rating: number; comment: string }) => {\n        const response = await api.post(`/products/${productId}/reviews/`, reviewData);\n        return response.data;\n    },\n};\n"],"mappings":"AACA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB,MAAO,MAAM,CAAAC,cAAc,CAAG,CAC1BC,WAAW,CAAE,KAAO,CAAAC,MAOnB,EAAuF,CACpF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAC,YAAY,CAAE,CAAEF,MAAO,CAAC,CAAC,CACxD,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACxB,CAAC,CAEDC,UAAU,CAAE,KAAO,CAAAC,EAAU,EAA6B,CACtD,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,cAAAI,MAAA,CAAcD,EAAE,KAAG,CAAC,CAClD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACxB,CAAC,CAEDI,aAAa,CAAE,KAAAA,CAAA,GAAiC,CAC5C,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAC,cAAc,CAAC,CAC9C,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACxB,CAAC,CAEDK,mBAAmB,CAAE,KAAAA,CAAA,GAAgC,CACjD,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAC,qBAAqB,CAAC,CACrD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACxB,CAAC,CAEDM,cAAc,CAAE,KAAO,CAAAC,KAAa,EAAyB,CACzD,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAC,mBAAmB,CAAE,CAAEF,MAAM,CAAE,CAAEW,CAAC,CAAED,KAAM,CAAE,CAAC,CAAC,CAC7E,MAAO,CAAAT,QAAQ,CAACE,IAAI,CACxB,CAAC,CAEDS,SAAS,CAAE,KAAAA,CAAOC,SAAiB,CAAEC,UAA+C,GAAK,CACrF,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACkB,IAAI,cAAAT,MAAA,CAAcO,SAAS,cAAaC,UAAU,CAAC,CAC9E,MAAO,CAAAb,QAAQ,CAACE,IAAI,CACxB,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}